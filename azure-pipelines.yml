trigger:
  branches:
    include:
      - main

pool:
  # vmImage: 'ubuntu-latest'
  name: 'Self-Hosted Pool'

variables:
  NODE_VERSION: '20'
  AZURE_APP_NAME: 'next-azure-app-service-test'  # Replace with your App Service name
  AZURE_SERVICE_CONNECTION: 'Azure subscription 1 (f70bdf5b-2914-4419-bcc9-bb1cafb0c176)'  # Replace with your service connection name
  DATABASE_URL: 'sqlserver://next-azure-swa-test-db-server.database.windows.net:1433;database=next-azure-swa-test-db;user=testing;password=q12we34rt5^YHGFDSAQ!;encrypt=true'

stages:
  - stage: BuildAndDeploy
    jobs:
      - job: Build
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(NODE_VERSION)
            displayName: 'Use Node.js $(NODE_VERSION)'
          
          - script: |
              npm install
              npm run build
              npm run prisma:generate
              mv ./build/static ./build/standalone/build
              mv ./public ./build/standalone
            displayName: 'Install Dependencies, Build, and Generate Prisma'
          
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/.next'  # Update this path to your build output directory
              includeRootFolder: false
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              verbose: true
            displayName: 'Archive Build Output'

          - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            artifact: 'drop'
            displayName: 'Publish Artifact: drop'

      - job: Deploy
        dependsOn: Build
        steps:
          - download: current
            artifact: drop
            displayName: 'Download Artifact: drop'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: $(AZURE_SERVICE_CONNECTION)
              appName: $(AZURE_APP_NAME)
              package: '$(System.DefaultWorkingDirectory)/drop/$(Build.BuildId).zip'
              runtimeStack: 'NODE|20-lts'

          - script: |
              npm cache clean --force
              rm -rf node_modules
              rm -rf build
              rm -rf ~/.npm/_logs
            displayName: 'Clean up after build'
            condition: always()  # Ensure this step runs even if the build fails